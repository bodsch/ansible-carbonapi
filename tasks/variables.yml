---

# - name: check if carbonapi is already installed and get it's version
#   shell: |
#     carbonapi --version
#   register: carbonapi_installed_version
#   failed_when: no
#   changed_when: carbonapi_installed_version.rc != 0
#
# - block:
#     - name: get latest release
#       uri:
#         url: "https://api.github.com/repos/go-graphite/carbonapi/releases/latest"
#         method: GET
#         return_content: true
#         status_code: 200
#         body_format: json
#         validate_certs: false
#         user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
#         password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
#       no_log: "{{ not lookup('env', 'ANSIBLE_DEBUG') | bool }}"
#       register: _latest_release
#       until: _latest_release.status == 200
#       retries: 5
#
#     - name: set carbonapi version to {{ _latest_release.json.tag_name }}
#       set_fact:
#         carbonapi_version: "{{ _latest_release.json.tag_name }}"
#   when: carbonapi_version == 'latest'
#
# - name: if installation required
#   set_fact:
#     carbonapi_should_install: "{{ true if carbonapi_installed_version.changed else carbonapi_installed_version.stdout is version_compare( carbonapi_version | regex_replace('^v',''), '!=' ) if carbonapi_latest else false }}"
#
# - name: set artefact name for download
#   set_fact:
#     carbonapi_artefact: "carbonapi_{{ carbonapi_version }}_{{ go_arch }}.deb"
#   when: ansible_os_family | lower == 'debian'
#
# - name: set artefact name for download
#   set_fact:
#     carbonapi_artefact: "carbonapi_{{ carbonapi_version }}-1.{{ ansible_machine }}.rpm"
#   when: ansible_os_family | lower == 'redhat'
#
